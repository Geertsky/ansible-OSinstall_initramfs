---

- name: "Set root password"
  ansible.builtin.command:
    cmd: "chroot /sysroot /bin/sh -c 'echo {{ rootpw }}|passwd --stdin root'"
  register: postminimallinstall__passwd
  changed_when: postminimallinstall__passwd.rc == 0
  failed_when: postminimallinstall__passwd.rc != 0

- name: "Add root authorized_keys to chroot"
  ansible.posix.authorized_key:
    key: "{{ item }}"
    path: /sysroot/root/.ssh/authorized_keys
    user: root
  loop: "{{ root_authorized_keys }}"

- name: "Install grub2 /boot/grub2/grub.cfg"
  ansible.builtin.command:
    cmd: "chroot /sysroot /usr/sbin/grub2-mkconfig -o /boot/grub2/grub.cfg"
  register: finalize__grub2_mkconfig
  changed_when: finalize__grub2_mkconfig.rc == 0
  failed_when: finalize__grub2_mkconfig.rc != 0

- name: "Install grub.cfg"
  ansible.builtin.command:
    cmd: "chroot /sysroot /usr/sbin/grub2-mkconfig -o /boot/efi/EFI/{{ installdistribution['name'] }}/grub.cfg"
  register: finalize__grub2_mkconfig
  changed_when: finalize__grub2_mkconfig.rc == 0
  failed_when: finalize__grub2_mkconfig.rc != 0

- name: "Install grub2 /etc/grub2-efi.cfg"
  ansible.builtin.file:
    src: "/sysroot/boot/efi/EFI/{{ installdistribution['name'] }}/grub.cfg"
    dest: "../../../../etc/grub2-efi.cfg"
    owner: root
    group: root
    state: link

- name: "Discover host keys"
  ansible.builtin.shell:
    cmd: "ls /etc/ssh/ssh_host_*key"
  register: finalize__hostkeys
  changed_when: finalize__hostkeys.rc == 0
  failed_when: finalize__hostkeys.rc != 0

- name: "Install ssh host keys"
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /sysroot/etc/ssh/
    remote_src: yes
    mode: '0600'
  loop: "{{ finalize__hostkeys.stdout_lines }}"

- name: "Discover host pub keys"
  ansible.builtin.shell:
    cmd: "ls /etc/ssh/ssh_host_*key.pub"
  register: finalize__hostkeypubs
  changed_when: finalize__hostkeypubs.rc == 0
  failed_when: finalize__hostkeypubs.rc != 0


- name: "Install ssh host pub keys"
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /sysroot/etc/ssh/
    remote_src: yes
    mode: '0644'
  loop: "{{ finalize__hostkeypubs.stdout_lines }}"
  tags: debug

- name: "Enable autorelabel"
  ansible.builtin.file:
    path: /sysroot/.autorelabel
    state: touch
    mode: '0644'
  when: '( strict_selinux is defined and strict_selinux ) or False'
